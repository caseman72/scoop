#!/usr/bin/env ruby
$: << File.join(File.dirname(__FILE__),'..','lib')
require 'scoop'

Signal.trap("INT") { signal_trap }
$trap_time = Time.now
def signal_trap
  if Time.now - $trap_time < 2
    puts "Caught rapid signal. Quitting forcefully."
    exit
  end
  puts "Caught signal. Attempting to quit gracefully. Signal twice to quit immediately."
  $trap_time = Time.now
  $term_received = true
end

parser = OptionParser.new
parser.banner = 'Usage: scoop [options]'
parser.on("--no-mail", "Don't send mail") do |opt|
  Scoop::App.no_mail = true
end
parser.on("--force", "Forces build for first run") do |opt|
  Scoop::App.force = true
end
parser.on("-o", "--once", "Loop once") do |opt|
  Scoop::App.once = true
end
parser.on("-v", "--version", "display version info") do |opt|
  puts Scoop::VERSION
  exit(0)
end
parser.on("-c", "--config=config.yml", "The config file to use. Default: #{Scoop[:config_file]}") do |opt|
  Scoop::App.cfg_file = opt
  Scoop::App.load_conf opt
end
parser.on("-G", "--generate", "Generate sample config file") do |opt|
  Scoop.generate_config
  exit
end
# parser.on("-p", "--poll_interval INT", "How frequrnt to poll the repo for changes. Default: #{Scoop[:poll_interval]}") do |opt|
#   Scoop[:poll_interval] = opt
# end
parser.on("-P", "--pidfile PATH", "Path to pid file. Default: #{Scoop[:pidfile]}") do |opt|
  Scoop[:pidfile] = opt
end
parser.on("-h", "--help", "This help.") do |opt|
  puts parser.help
  exit
end
parser.on("-d", "--debug", "debug mode.") do
  Scoop[:log_level] = :debug
  Scoop[:logger]    = "stdout"
  Scoop[:daemonize] = false
  Scoop[:no_loop]   = true
  Scoop[:debug]     = true
  puts "debug mode active".yellow
end
parser.on("-T", "--test-notify", "send a sample notify") do |opt|
  Scoop::App.test_notify = true
end
parser.parse!

unless Scoop::App.cfg_file
  puts parser.help
  abort "need to specify config file".red
end
if Scoop::App.test_notify
  Scoop::Builder.new(Scoop::App.conf).test_notify
  exit
end

Scoop::Builder.new(Scoop::App.conf).run
